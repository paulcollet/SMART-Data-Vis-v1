///-------------------------------------------------------------------------------------------------
// file:	CombinedCPC.h
//
// summary:	Declares the class for a combined collocated paired coordinates graph.
///-------------------------------------------------------------------------------------------------

#include "stdafx.h"
#include "ClassData.h"
#include "FileHandling.h"

#pragma once

////////////////////////////////////////////////////////////////////////////////////////////////////
/// <summary>	A combined cpc. </summary>
///
/// <author>  Phillipe Shin 02/21/2019</author>
/// <editor>  Paul Collet </editor>
////////////////////////////////////////////////////////////////////////////////////////////////////

class CombinedCPC
{

public:
	/// <summary>	The class data. </summary>
	ClassData data;
	/// <summary>	The new file. </summary>
	FileHandling newFile;

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	CCPC default constructor. </summary>
	///
	/// <author>  Phillipe Shin 02/21/2019</author>
	/// <editor>  Paul Collet </editor>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	CombinedCPC() {};

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Constructor. </summary>
	///
	/// <author>  Phillipe Shin 02/21/2019</author>
	/// <editor>  Paul Collet </editor>
	///
	/// <param name="parameter1">	[in,out] The first parameter. </param>
	/// <param name="parameter2">	The second parameter. </param>
	/// <param name="parameter3">	The third parameter. </param>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	CombinedCPC(ClassData&, double, double);

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Fill graph locations. </summary>
	///
	/// <author>  Phillipe Shin 02/21/2019</author>
	/// <editor>  Paul Collet </editor>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	void fillGraphLocations();

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Draw data. </summary>
	///
	/// <author>  Phillipe Shin 02/21/2019</author>
	/// <editor>  Paul Collet </editor>
	///
	/// <param name="x1">	The first x value. </param>
	/// <param name="y1">	The first y value. </param>
	/// <param name="i"> 	Zero-based index of the. </param>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	void drawData(float x1, float y1, int i);

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Displays this object. </summary>
	///
	/// <author>  Phillipe Shin 02/21/2019</author>
	/// <editor>  Paul Collet </editor>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	void display();
	void blank();

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Zooms. </summary>
	///
	/// <author>  Phillipe Shin 02/21/2019</author>
	/// <editor>  Paul Collet </editor>
	///
	/// <param name="factor">	The factor. </param>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	void zoom(double factor);
	void zoom_at(double x, double y, double factor);


};


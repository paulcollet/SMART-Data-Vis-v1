///-------------------------------------------------------------------------------------------------
// file:	FileHandling.h
//
// summary:	Declares the file handling class
///-------------------------------------------------------------------------------------------------

#include "stdafx.h"
#include "ClassData.h"

#pragma once

////////////////////////////////////////////////////////////////////////////////////////////////////
/// <summary>	A file handling. </summary>
///
/// <author>	Allyn Vo </author>	
////////////////////////////////////////////////////////////////////////////////////////////////////

class FileHandling
{
public:

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Default constructor. </summary>
	///
	/// <author>	Allyn Vo </author>	
	////////////////////////////////////////////////////////////////////////////////////////////////////

	FileHandling();

	// Input: Contents of input.csv -- Opens the file and reads the values into matrix values

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Opens a file. </summary>
	///
	/// <author>	Allyn Vo </author>	
	///
	/// <param name="parameter1">	[in,out] The first parameter. </param>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	void openFile(ClassData&);

	// Input: Contents of input.csv -- Splits the values into x and y coords

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Sort graph. </summary>
	///
	/// <author>	Allyn Vo </author>	
	///
	/// <param name="parameter1">	[in,out] The first parameter. </param>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	void sortGraph(ClassData&);

	void normalizeData(ClassData &data);

	void normalizeDataV2(ClassData &data);

};

